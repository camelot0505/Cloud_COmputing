//Department maintains a student information. The file contains roll number, name,
division and address. Allow user to add, delete information of student. Display
information of particular employee. If record of student does not exist an appropriate
message is displayed. If it is, then the system displays the student details. Use sequential
file to main the data. //



//Group F Q23
#include<iostream>
#include<fstream>
#include<cstring>
using namespace std;
class studRec
 {

 public:
 int rollNo;
 char name[10];
 char div;
 char address[20];
 void accept()
 {
  cout<<"\n\tEnter Roll Number : ";
  cin>>rollNo;
  cout<<"\n\tEnter the Name : ";
  cin>>name;
  cout<<"\n\tEnter the Division:";
  cin>>div;
  cout<<"\n\tEnter the Address:";
  cin>>address;
 }
        
        
        
  void show()
  {

  cout<<"\n\t"<<rollNo<<"\t\t"<<name<<"\t\t"<<div<<"\t\t"<<address;
  }
};
int main()
{
 int n,ch,ch1,rec,count;
 
 studRec t1;
 count=0;
 fstream g,f;
 do
 {
  cout<<"\n>>>>>>>>>>>>>>>>>>>>>>MENU<<<<<<<<<<<<<<<<<<<<";
  cout<<"\n1.Add Student Record";
  cout<<"\n2.Display All Student Record";
  cout<<"\n3.Search Student";
  cout<<"\n4.Delete a Student Record";
  cout<<"\n5.Exit";
  cout<<"\n\tEnter the Choice\t:";
  cin>>ch;
  switch(ch)
  {
  case 1:
   f.open("StuRecord.txt",ios::out);
   x:t1.accept();
   f.write((char*) &t1,(sizeof(t1)));
   cout<<"\nDo you want to enter more records?\n1.Yes\n2.No";
   cin>>ch1;
    if(ch1==1)
     goto x;
    else
    {
     f.close();
     break;
    }

  case 2:
   f.open("StuRecord.txt",ios::in);
   f.read((char*) &t1,(sizeof(t1)));
   cout<<"\n\tRoll No.\t\tName \t\t Division \t\t Address";
   while(f)
   {
    t1.show();
    f.read((char*) &t1,(sizeof(t1)));
   }
   f.close();
   break;
  
  case 3:
   cout<<"\nEnter the roll number you want to find";
   cin>>rec;
   f.open("StuRecord.txt",ios::in);
   f.read((char*)&t1,(sizeof(t1)));
   while(f)
   {
    if(rec==t1.rollNo)
    {
        count++;
     cout<<"\nRecord found";
      t1.show();
    } 
     f.read((char*)&t1,(sizeof(t1)));
   }
     
   if(count==0)
          cout<<"\nRecord not found";
   f.close();
   break;

  case 4:
      int roll;
      cout<<"Please Enter the Roll No. of Student Whose Info You Want to Delete: ";
     cin>>roll;
     f.open("StuRecord.txt",ios::in);
     g.open("temp.txt",ios::out);
     f.read((char *)&t1,sizeof(t1));
     while(!f.eof())
     {
        if (t1.rollNo != roll)
           g.write((char *)&t1,sizeof(t1));
         f.read((char *)&t1,sizeof(t1));
     }
    cout << "The record with the roll no. " << roll << " has been deleted " << endl;
     f.close();
     g.close();
     remove("StuRecord.txt");
     rename("temp.txt","StuRecord.txt");
      break;
    }
  }while(ch<5);
}


Here's a brief explanation of the modified code:

1. The code defines a class `studRec` to represent a student record. It has member variables `rollNo`, `name`, `div`, and `address`. It also contains member functions `accept()` and `show()` to input and display student records, respectively.

2. The `main()` function is where the program execution starts. It presents a menu to the user and performs different operations based on the user's choice.

3. If the user selects option 1, the code opens the file "StuRecord.txt" in output mode (`ios::out`). It then enters a loop labeled `x` to accept student records from the user using the `accept()` function. Each record is written to the file using the `write()` function. After each record, the code asks the user if they want to enter more records. If the user chooses to enter more records, the loop continues; otherwise, the file is closed, and the loop breaks.

4. If the user selects option 2, the code opens the file "StuRecord.txt" in input mode (`ios::in`). It then enters a loop to read each student record from the file using the `read()` function. The `show()` function is used to display each record on the console. Once all records are displayed, the file is closed.

5. If the user selects option 3, the code asks the user to enter the roll number they want to search for. It then opens the file "StuRecord.txt" in input mode and reads each record using the `read()` function. If a record with a matching roll number is found, it is displayed using the `show()` function. If no matching record is found, a message is displayed indicating that the record was not found. Finally, the file is closed.

6. If the user selects option 4, the code asks the user to enter the roll number of the record they want to delete. It opens the input file and a temporary output file. It reads each record from the input file, and if the roll number does not match the one to be deleted, it writes the record to the temporary output file. After processing all records, the input and output files are closed, and the original file is deleted. Finally, the temporary file is renamed to replace the original file.

7. The menu loop continues until the user chooses option 5 to exit the program.

Please note that the code assumes that the files "StuRecord.txt" and "temp.txt" already exist and are in the same directory as the source code file. Also, it uses the `fstream` class for file handling and the `ios::app` flag to append data to the file.
